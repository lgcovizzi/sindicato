version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sindicato_postgres
    environment:
      POSTGRES_DB: sindicato_db
      POSTGRES_USER: sindicato_user
      POSTGRES_PASSWORD: sindicato_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - sindicato_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: sindicato_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sindicato_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Laravel Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sindicato_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
      - backend_vendor:/var/www/html/vendor
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=sindicato_db
      - DB_USERNAME=sindicato_user
      - DB_PASSWORD=sindicato_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BROADCAST_DRIVER=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      - postgres
      - redis
    networks:
      - sindicato_network
    restart: unless-stopped

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sindicato_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VUE_APP_API_URL=http://localhost:8000/api
      - VUE_APP_SOCKET_URL=http://localhost:6001
    depends_on:
      - backend
    networks:
      - sindicato_network
    restart: unless-stopped

  # Socket.io Server for Real-time
  socketio:
    build:
      context: ./socketio
      dockerfile: Dockerfile
    container_name: sindicato_socketio
    ports:
      - "6001:6001"
    volumes:
      - ./socketio:/app
      - socketio_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LARAVEL_HOST=backend
      - LARAVEL_PORT=8000
    depends_on:
      - redis
      - backend
    networks:
      - sindicato_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: sindicato_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites:/etc/nginx/sites-available
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
      - socketio
    networks:
      - sindicato_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backend_vendor:
  frontend_node_modules:
  socketio_node_modules:

networks:
  sindicato_network:
    driver: bridge